Docker 
	Docker is one of the tools that used the idea of the isolated resources to 
	create a container that allows applications to be packaged with all the 
	dependencies installed and ran wherever we wanted.
	
	Docker can only run on Linux machines this means I cant install Dokcer directly on Windows or any other OS.
	If I want install Docker on windows then I need to run a Linux VM in windows on top that I need to run Docker.

Virtualization (VM)
	- VM is way of running virtual OS on top a host OS using a special software called Hyperviser.
	- VM directly shares the harware of the host OS. 

					VM 					vs 			Containerisation 
	1. Virtualization at hardware level  		1. Virtualization at OS level 
	2. Heavyweight - consume more host 			2. Lightweight
	   resources 	
	3. VM useses hypervisor 					3. containerisation tool is used 
	4. limited performace - Boot up time        4. Native performace - usualy boot 
		is more which is in minutes 			   fast in seconds.
	5. Cosumes more storage 					5. Shres OS storage means only uses 
												   required storage.
	6. Supports all OS 							6. Supports on Linux

host machine 
	This is the machine in which docker is running 
	
Docker image 

	To list images 
		docker images
		
	To download images from docker hub 
		docker pull <image_name>:<tag>

		note: The default tag will be always latest.
			  if we wont specify any tag latest will be considered 	
			  
	To connect to your docker hub account 
		docker login 

	To pull a image from your repo 
		docoker pull <username>/<image_name>:<tag>	
		
		ex: docker pull harshajain/my_ubuntu
		
	To push a image to your repo 

		1. Create a tag which matches your repo syntax 
			docker tag <old_name> <new_name>
			
			ex: docker tag ubuntu:22.10 harshajain/test:1.0
		
		2. Push the image 	
			docoker push <username>/<image_name>:<tag>	
		
			ex: docker push harshajain/test:1.0	
		
Docker container 
	A container is a set of isolated processes and resources. Linux achieves 
	this by using namespaces, which allows processes to access only resources 
	in that particular namespace, which allows having a process tree means set 
	of processes that is completely independent of the rest of the systems processes.
	
	Docker definition: A container is a standard unit of software that packages 
	up code and all its dependencies so the application runs quickly and reliably 
	from one computing environment to another.
	
	To list running containers 
		docker ps 
			(or)
		docker container ls 
	
	To list all containers
		docker ps -a 
	
	To list all stopped conatainers
		docker ps -a --filter status=exited
		
	To delete one or more container 	
		docker rm <conainter_id1> <conainter_id2> .... 
		
		To delete a running container 
			1. Forcefully - docker rm -f <conainter_id>
			2. Grace fully - docker rm $(docker stop <conainter_id>) 
											(or)
							 docker stop <conainter_id> | xargs -I{} docker rm "{}"						
				
	To delete all stopped/exited containers 
		docker rm $(docker ps -aq --filter status=exited)	
		
	
		
	To check the logs of conatainers 
		docker logs <container_id>

	To login / get inside a containre 
		docker attach <container_id>
			
	To run a command inside a conatainer 
		docker exec -it <container_id> <command>
		
	To create a container from a docker image 
		docker run -it -d --name <conainter_name> <image>:<tag> <run_time_command>
		
		-it - Interactive Terminal (tty) 
		-d - deatached mode (when ever we create a container it will auto login to avoid this 
			we can create a container in detached mode)
		--name used to provide user defined conatainer name
		
		Note: Always use the options before <image>:<tag> <run_time_command>
		
		ex: docker run -it -d --name my_jenkins -p 8080:8080 -p 50000:50000 jenkins/jenkins
		
Assignment: work with docker image and container commands
			Try to create a jenkins container (jenkins/jenkins:lts)		